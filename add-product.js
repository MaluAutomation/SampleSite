// üåê Centralized multilingual translations
const translations = {
  en: {
    quantityLabel: "Select quantity:",
    addToCart: "Add to Cart",
    back: "‚Üê Back to Homepage",
    logout: "Logout",
    logoutConfirm: "Are you sure you want to logout?",
    menuItems: {
      pizza: "üçï Pizza",
      salads: "ü•ó Salads",
      burgers: "üçî Burgers",
      noodles: "üçú Noodles",
      desserts: "üç∞ Desserts",
      beverages: "ü•§ Beverages"
    },
    addedMsg: {
      pizza: "Pizza added to cart!",
      salads: "Salads added to cart!",
      burgers: "Burgers added to cart!",
      noodles: "Noodles added to cart!",
      desserts: "Desserts added to cart!",
      beverages: "Beverages added to cart!"
    }
  },
  hi: {
    quantityLabel: "‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç:",
    addToCart: "‡§ï‡§æ‡§∞‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡•á‡§Ç",
    back: "‚Üê ‡§π‡•ã‡§Æ‡§™‡•á‡§ú ‡§™‡§∞ ‡§µ‡§æ‡§™‡§∏ ‡§ú‡§æ‡§è‡§Ç",
    logout: "‡§≤‡•â‡§ó ‡§Ü‡§â‡§ü",
    logoutConfirm: "‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§µ‡§æ‡§ï‡§à ‡§≤‡•â‡§ó ‡§Ü‡§â‡§ü ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?",
    menuItems: {
      pizza: "üçï ‡§™‡§ø‡§ú‡§º‡•ç‡§ú‡§º‡§æ",
      salads: "ü•ó ‡§∏‡§≤‡§æ‡§¶",
      burgers: "üçî ‡§¨‡§∞‡•ç‡§ó‡§∞",
      noodles: "üçú ‡§®‡•Ç‡§°‡§≤‡•ç‡§∏",
      desserts: "üç∞ ‡§Æ‡§ø‡§†‡§æ‡§à",
      beverages: "ü•§ ‡§™‡•á‡§Ø"
    },
    addedMsg: {
      pizza: "‡§™‡§ø‡§ú‡§º‡•ç‡§ú‡§º‡§æ ‡§ï‡§æ‡§∞‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡§æ ‡§ó‡§Ø‡§æ!",
      salads: "‡§∏‡§≤‡§æ‡§¶ ‡§ï‡§æ‡§∞‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡§æ ‡§ó‡§Ø‡§æ!",
      burgers: "‡§¨‡§∞‡•ç‡§ó‡§∞ ‡§ï‡§æ‡§∞‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡§æ ‡§ó‡§Ø‡§æ!",
      noodles: "‡§®‡•Ç‡§°‡§≤‡•ç‡§∏ ‡§ï‡§æ‡§∞‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡§æ ‡§ó‡§Ø‡§æ!",
      desserts: "‡§Æ‡§ø‡§†‡§æ‡§à ‡§ï‡§æ‡§∞‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡•Ä ‡§ó‡§à!",
      beverages: "‡§™‡•á‡§Ø ‡§ï‡§æ‡§∞‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡§æ ‡§ó‡§Ø‡§æ!"
    }
  },
  fr: {
    quantityLabel: "S√©lectionnez la quantit√© :",
    addToCart: "Ajouter au panier",
    back: "‚Üê Retour √† la page d'accueil",
    logout: "Se d√©connecter",
    logoutConfirm: "√ätes-vous s√ªr de vouloir vous d√©connecter ?",
    menuItems: {
      pizza: "üçï Pizza",
      salads: "ü•ó Salades",
      burgers: "üçî Burgers",
      noodles: "üçú Nouilles",
      desserts: "üç∞ Desserts",
      beverages: "ü•§ Boissons"
    },
    addedMsg: {
      pizza: "Pizza ajout√©e au panier !",
      salads: "Salades ajout√©es au panier !",
      burgers: "Burgers ajout√©s au panier !",
      noodles: "Nouilles ajout√©es au panier !",
      desserts: "Desserts ajout√©s au panier !",
      beverages: "Boissons ajout√©es au panier !"
    }
  },
  es: {
    quantityLabel: "Selecciona la cantidad:",
    addToCart: "Agregar al carrito",
    back: "‚Üê Volver a la p√°gina principal",
    logout: "Cerrar sesi√≥n",
    logoutConfirm: "¬øEst√°s seguro de que quieres cerrar sesi√≥n?",
    menuItems: {
      pizza: "üçï Pizza",
      salads: "ü•ó Ensaladas",
      burgers: "üçî Hamburguesas",
      noodles: "üçú Fideos",
      desserts: "üç∞ Postres",
      beverages: "ü•§ Bebidas"
    },
    addedMsg: {
      pizza: "¬°Pizza agregada al carrito!",
      salads: "¬°Ensaladas agregadas al carrito!",
      burgers: "¬°Hamburguesas agregadas al carrito!",
      noodles: "¬°Fideos agregados al carrito!",
      desserts: "¬°Postres agregados al carrito!",
      beverages: "¬°Bebidas agregadas al carrito!"
    }
  }
};

// üîç Helper to get query parameters
function getQueryParam(param) {
  const urlParams = new URLSearchParams(window.location.search);
  return urlParams.get(param);
}

// üñºÔ∏è Update UI on page load
document.addEventListener("DOMContentLoaded", () => {
  const lang = localStorage.getItem("lang") || "en";
  const itemKey = getQueryParam("item");
  const t = translations[lang];

  // Set translated product name
  document.getElementById("product-name").textContent = t.menuItems[itemKey] || itemKey;

  // Set quantity label
  document.querySelector("p").textContent = t.quantityLabel;

  // Set button texts
  document.querySelector("button").textContent = t.addToCart;
  document.querySelector(".back-button").textContent = t.back;
  document.querySelector(".logout-button").textContent = t.logout;
});

// üõí Add to cart with localized alert
function addToCart() {
  const lang = localStorage.getItem("lang") || "en";
  const itemKey = getQueryParam("item");
  const message = translations[lang].addedMsg[itemKey] || "Item added to cart!";
  alert(message);
}

// üîô Go back to homepage
function goBack() {
  window.location.href = "homepage.html";
}

// üîê Logout with confirmation
function logout() {
  const lang = localStorage.getItem("lang") || "en";
  const confirmText = translations[lang].logoutConfirm;

  if (confirm(confirmText)) {
    localStorage.removeItem("user");
    localStorage.setItem("lang", "en"); // Reset to English
    window.location.href = "login.html";
  }
}